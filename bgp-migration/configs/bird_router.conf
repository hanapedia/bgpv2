router id 10.0.0.1;

protocol device {
  scan time 60;
}

protocol direct direct1 {
  ipv4;
  interface "net1";
}

protocol direct direct2 {
  ipv4;
  interface "net2";
}

protocol direct direct3 {
  ipv4;
  interface "net3";
}

protocol kernel kernel1 {
  persist;              # Keep routes in kernel even if BIRD is restarted
  merge paths;

  ipv4 {
    import all;          # Don't import kernel routes into BIRD
    export all;
  };
}

protocol bgp controlplane {
  debug { routes };
  local as 65001;
  neighbor 10.0.1.2 as 65001;
  passive;
  direct;
  rr client;

  ipv4 {
    next hop self;

    import filter {
      print "importing route: ", net, ", ", from, ", ", proto, ", ", bgp_next_hop;
      accept;
    };
    export filter {
      if proto = "direct1" then reject;
      if (65000,300) ~ bgp_community then reject;
      print "exporting route: ", net, ", ", from, ", ", proto, ", ", bgp_next_hop;
      accept;
    };
  };
}

protocol bgp worker {
  debug { routes };
  local as 65001;
  neighbor 10.0.2.2 as 65001;
  passive;
  direct;
  rr client;

  ipv4 {
    next hop self;

    import filter { 
      print "importing route: ", net, ", ", from, ", ", proto, ", ", bgp_next_hop;
      accept;
    };
    export filter {
      if proto = "direct2" then reject;
      if (65000,300) ~ bgp_community then reject;
      print "exporting route: ", net, ", ", from, ", ", proto, ", ", bgp_next_hop;
      accept;
    };
  };
}


protocol bgp worker2 {
  debug { routes };
  local as 65001;
  neighbor 10.0.3.2 as 65001;
  passive;
  direct;
  rr client;

  ipv4 {
    next hop self;

    import filter { 
      print "importing route: ", net, ", ", from, ", ", proto, ", ", bgp_next_hop;
      accept;
    };
    export filter {
      if proto = "direct3" then reject;
      if (65000,300) ~ bgp_community then reject;
      print "exporting route: ", net, ", ", from, ", ", proto, ", ", bgp_next_hop;
      accept;
    };
  };
}
